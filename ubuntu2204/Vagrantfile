
$script = <<-EOL
echo "Setting for SSH"
KEY="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC4ZKdEOOwB0Z94sG0O0dw3UpsPjxM9PhV75TANbUPFMq60VZmzfNw28DPGLBfvMv3oICf8NFKZyFFzYFrRKL/6vWbXBlBEmv8q+SbRBJiqsPId/36lV9r/ZiA2BSOTSJGt0nTe/+5qj9a7p4wmHdO+lcogZ/58Tyb/mKysPRLYLbhhnkN1oN3DUAtWDX4XNaZvVmZWlZ+NfuuV45eYnYYmZlqnu6vtBsFGiJGdbCsGooWUD8vu1obqc9+P24ezlMTr3+t7BReWOc20RyjNhUd+Ta19tGNLl8UniCfbtcMG6yRiPzkIrATs9/69090y932axncrdCzXW90G5lEqNKKzjUTakdHcA+v+DNRAQDITXe2MwfvfAyxJnkU2wu/pT2EsWmQlll2ru6mZ76H27V5xnXFx8Qj31OTp4L+oEOx0wcaLpcg7lJsqGtTqsDXNDRe8dbb8FCfbpueE6pzA4GA/PwRR3I15JbDv+aXQIZiA4xKbebIP/hzPnFs+9oF081M= miuratomohiko@miuratoikonoMBP"
echo $KEY >> ~/.ssh/authorized_keys

# Add desktop environment
sudo apt install -y --no-install-recommends ubuntu-desktop
sudo apt install -y --no-install-recommends virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11

echo "Add `vagrant` to Administrator"
sudo usermod -a -G sudo vagrant

echo "Setting for Docker"
sudo apt-get remove docker docker-engine docker.io containerd runc
sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release -y
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y

echo "Using docker commands without sudo"
sudo usermod -aG docker $USER

echo "Setting for docker-compose v2.5"
sudo curl -L "https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/bin/docker-compose
sudo chmod +x /usr/bin/docker-compose

echo "Installing OpenJDK v11"
sudo apt install default-jdk default-jre -y

sudo shutdown -r now
EOL

Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "bento/ubuntu-22.04"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 8000, host: 8080, host_ip: "127.0.0.1"
  # ドメインとってるやつ(port: 443)に関してはホストPC側の/etc/hostsにて名前解決を行うこと
  config.vm.network "forwarded_port", guest: 80, host: 80   # HTTP(soroban front, clusterdev, clusterapi, apiv2)
  config.vm.network "forwarded_port", guest: 443, host: 443  # HTTPS(soroban front, clusterdev, clusterapi, apiv2)
  config.vm.network "forwarded_port", guest: 18080, host: 18080  # soroban phpfpm
  config.vm.network "forwarded_port", guest: 8025, host: 8025  # soroban mailhog

  config.vm.provider :virtualbox do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true

    #   # Customize the amount of memory on the VM:
    vb.memory = 4096

    vb.customize [
      "modifyvm"          , :id,
      "--vram"            , "256",
      "--clipboard"       , "bidirectional",
      "--accelerate3d"    , "on",
      "--hwvirtex"        , "on",
      "--nestedpaging"    , "on",
      "--largepages"      , "on",
      "--ioapic"          , "on",
      "--pae"             , "on",
      "--paravirtprovider", "kvm",
    ]
  end

  config.ssh.insert_key = false

  # 固定IPの設定
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Vagrantfileがあるディレクトリの./shareをvb内の~/shareにマウント
  config.vm.synced_folder "./share", "/home/vagrant/share"

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  config.vm.provision "shell", inline: $script

end
